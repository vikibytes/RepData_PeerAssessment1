totalsteps <- aggregate(steps~date,activity,sum)
barplot(totalsteps$steps,xlab="date",ylab="steps",main="Total number of steps taken per day")
hist(totalsteps$steps,breaks=15,main="Total number of steps taken per day",xlab="Total steps")
summary(totalsteps$steps)
str(activity)
library(ggplot2)
library(data.table)
g1 <- ggplot2(activity,aes(x=steps))+
geom_bar()
g1 <- ggplot(activity,aes(x=steps))+
geom_bar()
g1
barplot(totalsteps$steps,xlab="date",ylab="steps",main="Total number of steps taken per day")
g1 <- ggplot(activity,aes(x=date,y=steps))+
geom_bar(fill="blue")
g1
g1 <- ggplot(activity,aes(y=steps))+
geom_bar(fill="blue")
g1
barplot(totalsteps$steps,xlab="date",ylab="steps",main="Total number of steps taken per day")
g1 <- ggplot(activity,aes(y=steps))+
geom_bar(fill="blue")
g1
g1 <- ggplot(activity,aes(x=date,y=steps))+
geom_bar(fill="blue")
g1
g1 <- ggplot(activity,aes(x=date,y=steps))+
geom_bar(fill="blue",stat=identity)
g1
g1 <- ggplot(activity,aes(x=date,y=steps))+
geom_bar(fill="blue",stat="identity")
g1
g1 <- ggplot(activity,aes(x=date,y=steps))+
geom_bar(fill="blue",stat="identity")+
labs(y="Number of steps per day",x="date")
g1
g1 <- ggplot(activity,aes(x=date,y=steps))+
geom_bar(fill="blue",stat="identity")+
labs(y="Number of steps per day",x="date")
g1
g1 <- ggplot(totalsteps,aes(x=date,y=steps))+
geom_bar(fill="blue",stat="identity")+
labs(y="Number of steps per day",x="date")
g1
g1 <- ggplot(totalsteps,aes(x=date,y=steps))+
geom_bar(fill="blue",stat="identity")+
labs(y="Number of steps per day",x="date",title="Total number of steps taken per day")
g1
?colors
?color
colors()
g1 <- ggplot(totalsteps,aes(x=date,y=steps))+
geom_bar(fill="springgreen",stat="identity")+
labs(y="Number of steps per day",x="date",title="Total number of steps taken per day")
g1
g1 <- ggplot(totalsteps,aes(x=date,y=steps))+
geom_bar(fill="seagreen",stat="identity")+
labs(y="Number of steps per day",x="date",title="Total number of steps taken per day")
g1
g2 <- ggplot(totalsteps,aes(x=steps))+
geom_histogram(fill="seagreen")
g2
g2 <- ggplot(totalsteps,aes(x=steps))+
geom_histogram(fill="seagreen",binwith=1000)
g2
g2 <- ggplot(totalsteps,aes(x=steps))+
geom_histogram(fill="seagreen",binwidth=1000)
g2
g2 <- ggplot(totalsteps,aes(x=steps))+
geom_histogram(fill="seagreen",binwidth=1000)+
labs(title="Histogram of steps taken per day")
g2
colors(
aggregate(activity$steps,
by = list(interval = activity$interval),
FUN=mean, na.rm=TRUE)
StepsPerInterval <- aggregate(activity$steps,by=list(interval=activity$interval),FUN=mean,na.rm=TRUE)
View(StepsPerInterval)
str(StepsPerInterval)
View(StepsPerInterval)
View(StepsPerInterval)
colnames(StepsPerInterval) <- c("interval","steps")
View(StepsPerInterval)
color()
colors()
colnames(StepsPerInterval) <- c("interval","steps")
g3 <- ggplot(StepsPerInterval,aes(x=steps,y=interval))+
geom_line(color="maroon",)+
labs(x="intervals",y="average number of steps taken",title="Average daily activity pattern")
g3
levels(activity$interval)
levels(StepsPerInterval$interval)
levels(StepsPerInterval$interval)[StepsPerInterval$interval]
?levels
leves(factor(StepsPerInterval$interval))
levels(factor(StepsPerInterval$interval))
colnames(StepsPerInterval) <- c("interval","steps")
g3 <- ggplot(StepsPerInterval,aes(x=steps,y=interval))+
geom_line(color="maroon",)+
labs(x="Intervals",y="Average Number of Steps Taken",title="Average Daily Activity Pattern")
g3
```
colnames(StepsPerInterval) <- c("interval","steps")
g3 <- ggplot(StepsPerInterval,aes(x=steps,y=interval))+
geom_line(color="maroon",)+
labs(x="Intervals",y="Average Number of Steps Taken",title="Average Daily Activity Pattern")
g3
colnames(StepsPerInterval) <- c("interval","steps")
g3 <- ggplot(StepsPerInterval,aes(x=steps,y=interval))+
geom_line(color="maroon",)+
labs(x="Intervals",y="Average Number of Steps Taken",title="Average Daily Activity Pattern")
g3
View(StepsPerInterval)
StepsPerInterval <- aggregate(activity$steps,by=list(interval=activity$interval),
FUN=mean,na.rm=TRUE)
View(StepsPerInterval)
colnames(StepsPerInterval) <- c("interval","steps")
View(StepsPerInterval)
g3 <- ggplot(StepsPerInterval,aes(x=interval,y=steps))+
geom_line(color="maroon",)+
labs(x="Intervals",y="Average Number of Steps Taken",title="Average Daily Activity Pattern")
g3
g3 <- ggplot(StepsPerInterval,aes(x=interval,y=steps))+
geom_line(color="maroon",size=0.5)+
labs(x="Intervals",y="Average Number of Steps Taken",title="Average Daily Activity Pattern")
g3
g3 <- ggplot(StepsPerInterval,aes(x=interval,y=steps))+
geom_line(color="maroon",size=1)+
labs(x="Intervals",y="Average Number of Steps Taken",title="Average Daily Activity Pattern")
g3
g3 <- ggplot(StepsPerInterval,aes(x=interval,y=steps))+
geom_line(color="maroon",size=2)+
labs(x="Intervals",y="Average Number of Steps Taken",title="Average Daily Activity Pattern")
g3
```
g3 <- ggplot(StepsPerInterval,aes(x=interval,y=steps))+
geom_line(color="maroon",size=1.5)+
labs(x="Intervals",y="Average Number of Steps Taken",title="Average Daily Activity Pattern")
g3
g3 <- ggplot(StepsPerInterval,aes(x=interval,y=steps))+
geom_line(color="maroon",size=1)+
labs(x="Intervals",y="Average Number of Steps Taken",title="Average Daily Activity Pattern")
g3
max(StepsPerInterval$steps)
which.max(StepsPerInterval$steps)
View(StepsPerInterval)
MaxSteps <- StepsPerInterval[which.max(StepsPerInterval$steps),]
View(MaxSteps)
MaxSteps <- StepsPerInterval[which.max(StepsPerInterval$steps),1]
View(activity)
TotalMissing <- is.na(activity$steps)
TotalMissing <- sum(is.na(activity$steps))
summary(TotalSteps$steps)
TotalSteps <- aggregate(steps~date,activity,sum)
barplot(TotalSteps$steps,xlab="date",ylab="steps",main="Total number of steps taken per day")
hist(TotalSteps$steps,breaks=15,main="Total number of steps taken per day",xlab="Total steps")
g1 <- ggplot(TotalSteps,aes(x=date,y=steps))+
geom_bar(fill="seagreen",stat="identity")+
labs(y="Number of steps per day",x="date",title="Total number of steps taken per day")
g1
g2 <- ggplot(TotalSteps,aes(x=steps))+
geom_histogram(fill="seagreen",binwidth=1000)+
labs(title="Histogram of steps taken per day")
g2
summary(TotalSteps$steps)
mean(TotalSteps$steps, na.rm=TRUE)
median(TotalSteps$steps, na.rm=TRUE)
View(StepsPerInterval)
na_index <- which(is.na(activity$steps))
fill_steps <- activity$steps
fill_steps
fill_steps[na_index]
na_replace <- unlist(lapply(na_index, FUN=function(idx){
interval = data[idx,]$interval
pervalue[StepsPerInterval$interval == interval,]$steps
}))
na_replace <- unlist(lapply(na_index, FUN=function(idx){
interval = data[idx,]$interval
pervalue[StepsPerInterval$interval == interval,]$steps
}))
View(StepsPerInterval)
View(StepsPerInterval)
NAIndex <- which(is.na(activity))
rm(na_index)
?sapply
NoNA <- activity$steps
NAIndex
NAReplace <- sapply(NAIndex,FUN=function(Idx){
interval <- activity[Idx,]$interval
StepsPerInterval[StepsPerInterval$interval==interval,]$steps
})
interval <- activity[NAIndex,]$interval
interval
StepsPerInterval$interval==interval
rm(interval)
NoNA[NAIndex] <- NAReplace
View(StepsPerInterval)
View(activity)
NoNAData <- data.frame(steps=NoNA,date=activity$date,interval=activity$date)
sum(is.na(NoNAData))
?weekdays
weekdays(activity$date[1])
weekdays(activity$date[7])
weekdays(activity$date[6])
weekdays(activity$date[3])
View(activity)
weekdays(activity$date[200])
weekdays(activity$date[500])
weekend(activity$date[200])
is.weekdays
weekdays()
?level
?levels
?gl
Total.Steps <- aggregate(steps~date,NoNAData,sum)
g4 <- ggplot(Total.Steps,aes(x=steps))+
geom_histogram(fill="seagreen",binwidth=1000)+
labs(title="Histogram of steps taken per day")
g4
steps.mean <- mean(Total.Steps$steps)
steps.mean
steps.median <- median(Total.Steps$steps)
?levels
levels(activity$interval)
levels(factor(activity$interval))
levels(activity$interval)
class(NoNAData$date)
factor <- weekdays(NoNAData$date)
factors <- weekdays(NoNAData$date)
rm(factor)
factors[factors%in%c("Monday")]
factors[!(factors%in%c("Monday"))]
factors[factors%in%c("Saturday","Sunday")] <- "weekends"
dactor
factors
factors[!(factors%in%c("Saturday","Sunday"))] <- "weekdays"
NoNAData <- cbind(NoNAData,factors)
View(NoNAData)
?subset
?subset
?subset
weekdays.data <- subset(NoNAData,factors="weekdays")
View(NoNAData)
factors <- weekdays(NoNAData$date)
factors[!(factors%in%c("Saturday","Sunday"))] <- "weekdays"
factors[factors%in%c("Saturday","Sunday")] <- "weekends"
factors <- weekdays(NoNAData$date)
factors[!(factors%in%c("Saturday","Sunday"))] <- "weekdays"
factors[factors%in%c("Saturday","Sunday")] <- "weekends"
NoNAData <- cbind(NoNAData,factors)
weekdays.data <- subset(NoNAData,factors="weekdays")
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading the required libraries
```{r}
library(ggplot2)
```
## Loading and preprocessing the data
```{r}
unzip(zipfile="activity.zip")
activity <- read.csv("activity.csv")
activity$date <- as.Date(activity$date)
```
## What is mean total number of steps taken per day?
```{r}
TotalSteps <- aggregate(steps~date,activity,sum)
barplot(TotalSteps$steps,xlab="date",ylab="steps",main="Total number of steps taken per day")
hist(TotalSteps$steps,breaks=15,main="Total number of steps taken per day",xlab="Total steps")
g1 <- ggplot(TotalSteps,aes(x=date,y=steps))+
geom_bar(fill="seagreen",stat="identity")+
labs(y="Number of steps per day",x="date",title="Total number of steps taken per day")
g1
g2 <- ggplot(TotalSteps,aes(x=steps))+
geom_histogram(fill="seagreen",binwidth=1000)+
labs(title="Histogram of steps taken per day")
g2
summary(TotalSteps$steps)
StepsMean <- mean(TotalSteps$steps, na.rm=TRUE)
StepsMedian <- median(TotalSteps$steps, na.rm=TRUE)
```
Mean and median of the total number of steps taken per day are 10766 and 10765,respectively
## What is the average daily activity pattern?
```{r}
StepsPerInterval <- aggregate(activity$steps,by=list(interval=activity$interval),
FUN=mean,na.rm=TRUE)
colnames(StepsPerInterval) <- c("interval","steps")
g3 <- ggplot(StepsPerInterval,aes(x=interval,y=steps))+
geom_line(color="maroon",size=1)+
labs(x="Intervals",y="Average Number of Steps Taken",title="Average Daily Activity Pattern")
g3
MaxSteps <- StepsPerInterval[which.max(StepsPerInterval$steps),1]
```
The interval 835-840 contains the maximum number of steps
## Imputing missing values
```{r}
TotalMissing <- sum(is.na(activity$steps))
```
The total number of missing values are 2304
Replace missing values with the mean value at the same interval across days
```{r}
NoNA <- activity$steps
NAIndex <- which(is.na(activity))
NAReplace <- sapply(NAIndex,FUN=function(Idx){
interval <- activity[Idx,]$interval
StepsPerInterval[StepsPerInterval$interval==interval,]$steps
})
NoNA[NAIndex] <- NAReplace
NoNAData <- data.frame(steps=NoNA,date=activity$date,interval=activity$date)
Total.Steps <- aggregate(steps~date,NoNAData,sum)
g4 <- ggplot(Total.Steps,aes(x=steps))+
geom_histogram(fill="seagreen",binwidth=1000)+
labs(title="Histogram of steps taken per day")
g4
steps.mean <- mean(Total.Steps$steps)
steps.median <- median(Total.Steps$steps)
```
Both mean and median are 10766
factors <- weekdays(NoNAData$date)
factors[!(factors%in%c("Saturday","Sunday"))] <- "weekdays"
factors[factors%in%c("Saturday","Sunday")] <- "weekends"
NoNAData <- cbind(NoNAData,factors)
weekdays.data <- subset(NoNAData,factors="weekdays")
NoNAData <- data.frame(steps=NoNA,date=activity$date,interval=activity$date)
factors <- weekdays(NoNAData$date)
factors[!(factors%in%c("Saturday","Sunday"))] <- "weekdays"
factors%in%c("Saturday","Sunday")
factors[factors%in%c("Saturday","Sunday")] <- "weekends"
factors%in%c("Saturday","Sunday")
?subset
NoNAData <- data.frame(steps=NoNA,date=activity$date,interval=activity$date)
factors <- weekdays(NoNAData$date)
factors[!(factors%in%c("Saturday","Sunday"))] <- "weekdays"
factors[factors%in%c("Saturday","Sunday")] <- "weekends"
NoNAData <- cbind(NoNAData,factors)
weekdays.data <- subset(NoNAData,factors=="weekdays")
weekends.data <- subset(NoNAData,factors!="weekdays")
?aggregate
list(interval=activity$interval)
activity$interval
steps.per.interval.1 <- aggregate(weekdays.data$steps,by=list(weekdays.data$interval,FUN=mean)
steps.per.interval.1 <- aggregate(weekdays.data$steps,by=list(weekdays.data$interval),FUN=mean)
steps.per.interval.1 <- aggregate(weekdays.data$steps,by=list(weekdays.data$interval),FUN=mean)
View(steps.per.interval.1)
colnames(steps.per.interval.1) <- c("date","steps")
steps.per.interval.2 <- aggregate(weekends.data$steps,by=list(weekends.data$interval),FUN=mean)
colnames(steps.per.interval.2) <- c("date","steps")
View(steps.per.interval.1)
View(steps.per.interval.2)
weekdays.data$dayofweek <- rep("weekdays", nrow(weekdays.data))
weekends.data$dayofweek <- rep("weekends", nrow(weekends.data))
View(weekdays.data)
View(weekends.data)
data_by_weekdays <- rbind(weekdays.data, weekends.data)
steps.per.interval.1$dayofweek <- rep("weekdays", nrow(steps.per.interval.1))
steps.per.interval.2$dayofweek <- rep("weekends", nrow(steps.per.interval.2))
weekday.steps <- aggregate(weekdays.data$steps,by=list(weekdays.data$interval),FUN=mean)
colnames(steps.per.interval.1) <- c("date","steps")
weekend.steps <- aggregate(weekends.data$steps,by=list(weekends.data$interval),FUN=mean)
colnames(steps.per.interval.2) <- c("date","steps")
weekday.steps$dayofweek <- rep("weekdays", nrow(weekday.steps))
weekend.steps$dayofweek <- rep("weekends", nrow(weekend.steps))
dayofweek.data <- rbind(weekday.steps,weekend.steps)
data.of.weekday <- rbind(weekday.steps, weekend.steps)
View(data.of.weekday)
colnames(weekday.steps) <- c("date","steps")
colnames(weekend.steps) <- c("date","steps")
weekday.steps$dayofweek <- rep("weekdays", nrow(weekday.steps))
weekend.steps$dayofweek <- rep("weekends", nrow(weekend.steps))
data.of.weekday <- rbind(weekday.steps, weekend.steps)
View(data.of.weekday)
factors <- weekdays(NoNAData$date)
factors[!(factors%in%c("Saturday","Sunday"))] <- "weekdays"
factors[factors%in%c("Saturday","Sunday")] <- "weekends"
NoNAData <- cbind(NoNAData,factors)
weekdays.data <- subset(NoNAData,factors=="weekdays")
weekends.data <- subset(NoNAData,factors!="weekdays")
weekday.steps <- aggregate(weekdays.data$steps,by=list(weekdays.data$interval),FUN=mean)
colnames(weekday.steps) <- c("date","steps")
weekend.steps <- aggregate(weekends.data$steps,by=list(weekends.data$interval),FUN=mean)
colnames(weekend.steps) <- c("date","steps")
View(weekday.steps)
weekday.steps$dayofweek <- rep("weekdays", nrow(weekday.steps))
weekend.steps$dayofweek <- rep("weekends", nrow(weekend.steps))
data.of.weekday <- rbind(weekday.steps, weekend.steps)
View(weekday.steps)
View(activity)
View(data_by_weekdays)
View(data.of.weekday)
g5 <- ggplot(data.of.weekday,aes(x=interval,y=steps))+
geom_line(color="maroon",size=1)+
facet_wrap(~ dayofweek,nrow=2,ncol=1)+
labs(x="Interval",y="Number of steps")
g5
factors <- weekdays(NoNAData$date)
factors[!(factors%in%c("Saturday","Sunday"))] <- "weekdays"
factors[factors%in%c("Saturday","Sunday")] <- "weekends"
NoNAData <- cbind(NoNAData,factors)
weekdays.data <- subset(NoNAData,factors=="weekdays")
weekends.data <- subset(NoNAData,factors!="weekdays")
weekday.steps <- aggregate(weekdays.data$steps,by=list(interval=weekdays.data$interval),FUN=mean)
colnames(weekday.steps) <- c("date","steps")
weekend.steps <- aggregate(weekends.data$steps,by=list(interval=weekends.data$interval),FUN=mean)
colnames(weekend.steps) <- c("date","steps")
weekday.steps$dayofweek <- rep("weekdays", nrow(weekday.steps))
weekend.steps$dayofweek <- rep("weekends", nrow(weekend.steps))
data.of.weekday <- rbind(weekday.steps, weekend.steps)
g5 <- ggplot(data.of.weekday,aes(x=interval,y=steps))+
geom_line(color="maroon",size=1)+
facet_wrap(~ dayofweek,nrow=2,ncol=1)+
labs(x="Interval",y="Number of steps")
g5
View(data.of.weekday)
View(StepsPerInterval)
View(dayofweek.data)
View(NoNAData)
View(weekday.steps)
View(weekdays.data)
library(ggplot2)
activity <- read.csv("activity.csv")
activity$date <- as.Date(activity$date)
TotalSteps <- aggregate(steps~date,activity,sum)
barplot(TotalSteps$steps,xlab="date",ylab="steps",main="Total number of steps taken per day")
hist(TotalSteps$steps,breaks=15,main="Total number of steps taken per day",xlab="Total steps")
g1 <- ggplot(TotalSteps,aes(x=date,y=steps))+
geom_bar(fill="seagreen",stat="identity")+
labs(y="Number of steps per day",x="date",title="Total number of steps taken per day")
g1
g2 <- ggplot(TotalSteps,aes(x=steps))+
geom_histogram(fill="seagreen",binwidth=1000)+
labs(title="Histogram of steps taken per day")
g2
summary(TotalSteps$steps)
StepsMean <- mean(TotalSteps$steps, na.rm=TRUE)
StepsMedian <- median(TotalSteps$steps, na.rm=TRUE)
StepsPerInterval <- aggregate(activity$steps,by=list(interval=activity$interval),
FUN=mean,na.rm=TRUE)
colnames(StepsPerInterval) <- c("interval","steps")
g3 <- ggplot(StepsPerInterval,aes(x=interval,y=steps))+
geom_line(color="maroon",size=1)+
labs(x="Intervals",y="Average Number of Steps Taken",title="Average Daily Activity Pattern")
g3
MaxSteps <- StepsPerInterval[which.max(StepsPerInterval$steps),1]
TotalMissing <- sum(is.na(activity$steps))
NoNA <- activity$steps
NAIndex <- which(is.na(activity))
NAReplace <- sapply(NAIndex,FUN=function(Idx){
interval <- activity[Idx,]$interval
StepsPerInterval[StepsPerInterval$interval==interval,]$steps
})
NoNA[NAIndex] <- NAReplace
NoNAData <- data.frame(steps=NoNA,date=activity$date,interval=activity$date)
Total.Steps <- aggregate(steps~date,NoNAData,sum)
g4 <- ggplot(Total.Steps,aes(x=steps))+
geom_histogram(fill="seagreen",binwidth=1000)+
labs(title="Histogram of steps taken per day")
g4
steps.mean <- mean(Total.Steps$steps)
steps.median <- median(Total.Steps$steps)
factors <- weekdays(NoNAData$date)
factors[!(factors%in%c("Saturday","Sunday"))] <- "weekdays"
factors[factors%in%c("Saturday","Sunday")] <- "weekends"
NoNAData <- cbind(NoNAData,factors)
View(NoNAData)
NoNAData <- data.frame(steps=NoNA,date=activity$date,interval=activity$interval)
Total.Steps <- aggregate(steps~date,NoNAData,sum)
g4 <- ggplot(Total.Steps,aes(x=steps))+
geom_histogram(fill="seagreen",binwidth=1000)+
labs(title="Histogram of steps taken per day")
g4
steps.mean <- mean(Total.Steps$steps)
steps.median <- median(Total.Steps$steps)
factors <- weekdays(NoNAData$date)
factors[!(factors%in%c("Saturday","Sunday"))] <- "weekdays"
factors[factors%in%c("Saturday","Sunday")] <- "weekends"
NoNAData <- cbind(NoNAData,factors)
View(NoNAData)
weekdays.data <- subset(NoNAData,factors=="weekdays")
weekends.data <- subset(NoNAData,factors!="weekdays")
weekday.steps <- aggregate(weekdays.data$steps,by=list(interval=weekdays.data$interval),FUN=mean)
colnames(weekday.steps) <- c("date","steps")
weekend.steps <- aggregate(weekends.data$steps,by=list(interval=weekends.data$interval),FUN=mean)
colnames(weekend.steps) <- c("date","steps")
weekday.steps$dayofweek <- rep("weekdays", nrow(weekday.steps))
weekend.steps$dayofweek <- rep("weekends", nrow(weekend.steps))
data.of.weekday <- rbind(weekday.steps, weekend.steps)
g5 <- ggplot(data.of.weekday,aes(x=interval,y=steps))+
geom_line(color="maroon",size=1)+
facet_wrap(~ dayofweek,nrow=2,ncol=1)+
labs(x="Interval",y="Number of steps")
g5
View(weekday.steps)
View(weekdays.data)
View(weekday.steps)
weekday.steps <- aggregate(weekdays.data$steps,by=list(interval=weekdays.data$interval),FUN=mean)
View(weekday.steps)
weekend.steps <- aggregate(weekends.data$steps,by=list(interval=weekends.data$interval),
FUN=mean)
View(weekday.steps)
colnames(weekday.steps) <- c("interval","steps")
colnames(weekend.steps) <- c("interval","steps")
weekday.steps$dayofweek <- rep("weekdays", nrow(weekday.steps))
weekend.steps$dayofweek <- rep("weekends", nrow(weekend.steps))
data.of.weekday <- rbind(weekday.steps, weekend.steps)
g5 <- ggplot(data.of.weekday,aes(x=interval,y=steps))+
geom_line(color="maroon",size=1)+
facet_wrap(~ dayofweek,nrow=2,ncol=1)+
labs(x="Interval",y="Number of steps")
g5
